//
//  RNTAlanButtonManager.m
//
//  Created by Alan AI, Inc on 30.10.2019.
//

#import "AlanSDK.h"
#import "AlanManager.h"
#import "RNTAlanButtonManager.h"
#import <React/RCTViewManager.h>

@interface RNTAlanButtonManager()
@property (nonatomic, strong) UIView* container;
@end

@implementation RNTAlanButtonManager

RCT_EXPORT_MODULE(RNTAlanButton)

RCT_CUSTOM_VIEW_PROPERTY(params, NSArray, AlanButton)
{
    if( self.container == nil )
    {
        self.container = [UIView new];
    }
    
    AlanButton* alanButton = AlanManager.shared.alanButton;
    if( alanButton != nil )
    {
        [alanButton removeFromSuperview];
        alanButton = nil;
    }
    
    if (![json isKindOfClass:[NSArray class]])
    {
        return;
    }
    
    NSArray* projectParams = [NSArray arrayWithArray:json];
    if( projectParams.count < 1 )
    {
        return;
    }
    
    if ([projectParams[0] isKindOfClass:[NSNull class]])
    {
        return;
    }
    
    NSString* projectKey = projectParams[0];
    NSString* projectHost = @"studio.alan.app";
    NSString* projectVersion = @"unknown";
    NSMutableDictionary* projectData = [NSMutableDictionary new];
    if( projectParams.count > 1 )
    {
        if (![projectParams[1] isKindOfClass:[NSNull class]] && [projectParams[1] isKindOfClass:[NSString class]])
        {
            projectHost = projectParams[1];
        }
    }
    if( projectParams.count > 2 )
    {
        if (![projectParams[2] isKindOfClass:[NSNull class]] && [projectParams[2] isKindOfClass:[NSDictionary class]])
        {
            NSDictionary* dataObject = projectParams[2];
            [projectData addEntriesFromDictionary:dataObject];
        }
    }
    if( projectParams.count > 3 )
    {
        if (![projectParams[3] isKindOfClass:[NSNull class]] && [projectParams[3] isKindOfClass:[NSString class]])
        {
            projectVersion = projectParams[3];
        }
    }

    AlanConfig *config = [[AlanConfig alloc] initWithKey:projectKey host:projectHost dataObject:projectData platform:@"react-native" platformVersion:projectVersion];
    alanButton = [[AlanButton alloc] initWithConfig:config];
    [alanButton setTranslatesAutoresizingMaskIntoConstraints:NO];
    [self.container addSubview:alanButton];
    
    NSLayoutConstraint *top = [NSLayoutConstraint constraintWithItem:alanButton attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEqual toItem:self.container attribute:NSLayoutAttributeTop multiplier:1 constant:0];
    NSLayoutConstraint *bottom = [NSLayoutConstraint constraintWithItem:alanButton attribute:NSLayoutAttributeBottom relatedBy:NSLayoutRelationEqual toItem:self.container attribute:NSLayoutAttributeBottom multiplier:1 constant:0];
    NSLayoutConstraint *left = [NSLayoutConstraint constraintWithItem:alanButton attribute:NSLayoutAttributeLeft relatedBy:NSLayoutRelationEqual toItem:self.container attribute:NSLayoutAttributeLeft multiplier:1 constant:0];
    NSLayoutConstraint *right = [NSLayoutConstraint constraintWithItem:alanButton attribute:NSLayoutAttributeRight relatedBy:NSLayoutRelationEqual toItem:self.container attribute:NSLayoutAttributeRight multiplier:1 constant:0];
    
    [self.container addConstraints:@[top, bottom, left, right]];
    
    AlanManager.shared.alanButton = alanButton;
    
    [self.container bringSubviewToFront:alanButton];
}

- (UIView *)view
{
    if( self.container == nil )
    {
        self.container = [UIView new];
    }
    return self.container;
}

@end
